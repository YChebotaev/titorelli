// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  username      String
  contacts      UserContact[]
  passwordHash  String
  passwordSalt  String
  sessions      UserSession[]
  consents      UserConsent[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  @@index([username])
  @@index([createdAt])
  @@index([updatedAt])
}

model UserContact {
  id              Int         @id @default(autoincrement())
  // 'email' | 'phone' | 'tg-username' | 'tg-user-id'
  type                  String
  email                 String?
  emailConfirmed        Boolean?
  emailDisposable       Boolean?
  emailCorporate        Boolean?
  phone                 String?
  phoneInvalid          Boolean?
  // 'out-of-service' | 'cant-reach' | 'wrong-person' | 'other:${reason}'
  phoneInvalidReason    String?
  tgUsername            String?
  tgUserId              String?
  user                  User        @relation(fields: [userId], references: [id])
  userId                Int
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  @@index([type])
  @@index([email])
  @@index([createdAt])
  @@index([updatedAt])
}

model UserSession {
  id            Int         @id @default(autoincrement())
  token         String      
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  revoked       Boolean
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  @@index([token])
  @@index([userId])
}

model UserConsent {
  id            Int         @id @default(autoincrement())
  // 'terms' | 'pdp' | 'subsc'
  type          String
  terms         Boolean?
  pdp           Boolean?
  sub           Boolean?
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Client {
  id            Int         @id @default(autoincrement())
  secretHash    String
  secretSalt    String
  // 'bot' | 'console'
  role          String
  /* [
    | ':modelId/predict'
    | ':modelId/train'
    | ':modelId/exact_match/train'
    | ':modelId/totems/train'
    | 'cas/train'
    | 'console/clients'
  ] */
  scopes        String  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  @@index([createdAt])
  @@index([updatedAt])
}
